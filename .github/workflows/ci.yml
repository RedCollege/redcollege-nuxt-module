name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  check-author:
    runs-on: ubuntu-latest
    outputs:
      is-authorized: ${{ steps.check.outputs.is-authorized }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check author or merger
        id: check
        run: |
          # Para merges de PR o commits directos, verificamos quién realizó la acción
          # github.actor es quien realizó la acción (commit directo o merge de PR)
          ACTOR="${{ github.actor }}"
          echo "Actor: $ACTOR"

          # Lista de usuarios autorizados (nombres de usuario de GitHub)
          if [[ "$ACTOR" == "josepuma" || "$ACTOR" == "marcosdgi" ]]; then
            echo "Usuario autorizado detectado: $ACTOR"
            echo "is-authorized=true" >> $GITHUB_OUTPUT
          else
            echo "Usuario no autorizado: $ACTOR"
            echo "is-authorized=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-author
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npx npm@latest install
      - name: Build
        run: npm run dev:prepare
      - name: Build
        run: npm run prepack

  publish-package:
    runs-on: ubuntu-latest
    needs: [check-author, build]
    steps:
      - name: Debug condition
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Is authorized: ${{ needs.check-author.outputs.is-authorized }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event JSON:"
          echo "${{ toJSON(github.event) }}"
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: https://registry.npmjs.org/
      - name: Install dependencies
        run: npx npm@latest install
      - name: Build
        run: npm run dev:prepare
      - name: Build
        run: npm run prepack
      - name: Update Version
        run: |
          git config --local user.email "josepuma@sayrin.cl"
          git config --local user.name "Jose Puma"
          git add .
          git commit -m "Commit changes before version bump" || echo "No changes to commit"
          npm version patch
          git push && git push --tags
      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_REDCOLLEGE_ACCESS }}
